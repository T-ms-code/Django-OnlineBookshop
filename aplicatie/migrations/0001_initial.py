# Generated by Django 5.1.1 on 2024-12-14 12:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume', models.CharField(max_length=50)),
                ('prenume', models.CharField(max_length=50)),
                ('data_nastere', models.DateField()),
                ('data_deces', models.DateField(blank=True, null=True)),
                ('nationalitate', models.CharField(blank=True, max_length=50, null=True)),
                ('descriere', models.TextField(blank=True, null=True)),
                ('premii', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefon', models.CharField(blank=True, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titlu', models.CharField(max_length=50)),
                ('nr_pagini', models.PositiveIntegerField()),
                ('data_publicatie', models.DateField()),
                ('coperta', models.ImageField(blank=True, null=True, upload_to='')),
                ('pret', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stoc', models.CharField(choices=[('epuizat', 'Epuizat'), ('neepuizat', 'Neepuizat')], default='neepuizat')),
                ('autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='aplicatie.autor')),
            ],
        ),
        migrations.CreateModel(
            name='Comanda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nr_produse', models.PositiveBigIntegerField()),
                ('pret_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_concepere', models.DateField(null=True)),
                ('data_livrare', models.DateField(null=True)),
                ('firma_livratoare', models.CharField(max_length=50)),
                ('adresa_livrare', models.CharField(max_length=50)),
                ('mod_plata', models.CharField(choices=[('card', 'Card'), ('cash', 'Cash')], default='card')),
                ('carti', models.ManyToManyField(blank=True, null=True, to='aplicatie.carte')),
            ],
        ),
        migrations.AddField(
            model_name='carte',
            name='comenzi',
            field=models.ManyToManyField(blank=True, null=True, to='aplicatie.comanda'),
        ),
        migrations.CreateModel(
            name='Editura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denumire', models.CharField(max_length=50)),
                ('data_infiintare', models.DateField(default='1990-01-01')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('tara', models.CharField(max_length=50)),
                ('oras', models.CharField(max_length=50)),
                ('strada', models.CharField(max_length=50)),
                ('carti', models.ManyToManyField(blank=True, null=True, related_name='ceva', to='aplicatie.carte')),
            ],
        ),
        migrations.AddField(
            model_name='carte',
            name='edituri',
            field=models.ManyToManyField(blank=True, null=True, to='aplicatie.editura'),
        ),
        migrations.CreateModel(
            name='Librarie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denumire', models.CharField(max_length=50)),
                ('data_infiintare', models.DateField(default='1990-01-01')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefon', models.CharField(max_length=20, null=True, unique=True)),
                ('tara', models.CharField(max_length=50)),
                ('oras', models.CharField(max_length=50)),
                ('strada', models.CharField(max_length=50)),
                ('carti', models.ManyToManyField(blank=True, null=True, to='aplicatie.carte')),
            ],
        ),
        migrations.AddField(
            model_name='carte',
            name='librarii',
            field=models.ManyToManyField(blank=True, null=True, to='aplicatie.librarie'),
        ),
        migrations.CreateModel(
            name='Recenzie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_creator', models.CharField(max_length=50)),
                ('prenume_creator', models.CharField(max_length=50)),
                ('data_creare', models.DateField(null=True)),
                ('continut', models.TextField()),
                ('actualizata', models.BooleanField()),
                ('verificata', models.BooleanField()),
                ('carte', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aplicatie.carte')),
            ],
        ),
    ]
